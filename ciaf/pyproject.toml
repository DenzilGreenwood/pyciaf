[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ciaf"
version = "1.0.0"
description = "Cognitive Insight Audit Framework - A comprehensive framework for verifiable AI training and inference pipelines"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Denzil James Greenwood", email = "founder@cognitiveinsight.ai"}
]
maintainers = [
    {name = "Denzil James Greenwood", email = "founder@cognitiveinsight.ai"}
]
keywords = [
    "ai", "artificial intelligence", "machine learning", "cryptography", 
    "provenance", "compliance", "gdpr", "ai-act", "nist", "hipaa", 
    "audit", "transparency", "explainable-ai", "uncertainty-quantification"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Security :: Cryptography",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
requires-python = ">=3.9"
dependencies = [
    "cryptography>=3.4.8",
    "numpy>=1.21.0",
    "scikit-learn>=1.0.0"
]

[project.optional-dependencies]
full = [
    "shap>=0.41.0",
    "lime>=0.2.0.1",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "pandas>=1.3.0",
    "plotly>=5.0.0"
]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.12.0",
    "black>=21.0.0",
    "flake8>=3.9.0",
    "mypy>=0.910",
    "pre-commit>=2.15.0"
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.15.0"
]

[project.urls]
"Homepage" = "https://github.com/DenzilGreenwood/pyciaf"
"Documentation" = "https://ciaf.readthedocs.io"
"Repository" = "https://github.com/DenzilGreenwood/pyciaf"
"Bug Tracker" = "https://github.com/DenzilGreenwood/pyciaf/issues"
"Changelog" = "https://github.com/DenzilGreenwood/pyciaf/blob/main/CHANGELOG.md"

[project.scripts]
ciaf-setup-metadata = "ciaf.cli:setup_metadata_cli"
ciaf-compliance-report = "ciaf.cli:compliance_report_cli"

[tool.setuptools.packages.find]
where = ["."]
include = ["ciaf*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
"ciaf" = ["*.md", "*.txt", "*.json"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["ciaf"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]
